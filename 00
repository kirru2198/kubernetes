# Kubernetes Commands

## Cluster Management
- **Get cluster information**
  ```bash
  kubectl cluster-info
  ```

- **Get nodes in the cluster**
  ```bash
  kubectl get nodes
  ```

- **View the current context**
  ```bash
  kubectl config current-context
  ```

- **Switch context**
  ```bash
  kubectl config use-context <context-name>
  ```

## Namespace Management
- **List all namespaces**
  ```bash
  kubectl get namespaces
  ```

- **Create a new namespace**
  ```bash
  kubectl create namespace <namespace-name>
  ```

- **Delete a namespace**
  ```bash
  kubectl delete namespace <namespace-name>
  ```

- **Set the default namespace for the current context**
  ```bash
  kubectl config set-context --current --namespace=<namespace-name>
  ```

## Pod Management
- **Get all pods in the current namespace**
  ```bash
  kubectl get pods
  ```

- **Get all pods in a specific namespace**
  ```bash
  kubectl get pods -n <namespace-name>
  ```

- **Describe a specific pod**
  ```bash
  kubectl describe pod <pod-name>
  ```

- **Create a pod from a YAML file**
  ```bash
  kubectl apply -f <pod-file.yaml>
  ```

- **Delete a pod**
  ```bash
  kubectl delete pod <pod-name>
  ```

- **Execute a command in a running pod**
  ```bash
  kubectl exec -it <pod-name> -- <command>
  ```

## Deployment Management
- **Get all deployments in the current namespace**
  ```bash
  kubectl get deployments
  ```

- **Create a deployment from a YAML file**
  ```bash
  kubectl apply -f <deployment-file.yaml>
  ```

- **Update a deployment**
  ```bash
  kubectl set image deployment/<deployment-name> <container-name>=<new-image>
  ```

- **Scale a deployment**
  ```bash
  kubectl scale deployment <deployment-name> --replicas=<number>
  ```

- **Delete a deployment**
  ```bash
  kubectl delete deployment <deployment-name>
  ```

## Service Management
- **Get all services in the current namespace**
  ```bash
  kubectl get services
  ```

- **Create a service from a YAML file**
  ```bash
  kubectl apply -f <service-file.yaml>
  ```

- **Delete a service**
  ```bash
  kubectl delete service <service-name>
  ```

## ConfigMap Management
- **Get all ConfigMaps in the current namespace**
  ```bash
  kubectl get configmaps
  ```

- **Create a ConfigMap from a file**
  ```bash
  kubectl create configmap <configmap-name> --from-file=<file-path>
  ```

- **Create a ConfigMap from a YAML file**
  ```bash
  kubectl apply -f <configmap-file.yaml>
  ```

- **Delete a ConfigMap**
  ```bash
  kubectl delete configmap <configmap-name>
  ```

## Secret Management
- **Get all Secrets in the current namespace**
  ```bash
  kubectl get secrets
  ```

- **Create a Secret from literal values**
  ```bash
  kubectl create secret generic <secret-name> --from-literal=<key>=<value>
  ```

- **Create a Secret from a YAML file**
  ```bash
  kubectl apply -f <secret-file.yaml>
  ```

- **Delete a Secret**
  ```bash
  kubectl delete secret <secret-name>
  ```

## Persistent Volume and Persistent Volume Claim Management
- **Get all Persistent Volumes**
  ```bash
  kubectl get pv
  ```

- **Get all Persistent Volume Claims**
  ```bash
  kubectl get pvc
  ```

- **Create a Persistent Volume Claim from a YAML file**
  ```bash
  kubectl apply -f <pvc-file.yaml>
  ```

- **Delete a Persistent Volume Claim**
  ```bash
  kubectl delete pvc <pvc-name>
  ```

## DaemonSet Management
- **Get all DaemonSets in the current namespace**
  ```bash
  kubectl get daemonsets
  ```

- **Create a DaemonSet from a YAML file**
  ```bash
  kubectl apply -f <daemonset-file.yaml>
  ```

- **Delete a DaemonSet**
  ```bash
  kubectl delete daemonset <daemonset-name>
  ```

## StatefulSet Management
- **Get all StatefulSets in the current namespace**
  ```bash
  kubectl get statefulsets
  ```

- **Create a StatefulSet from a YAML file**
  ```bash
  kubectl apply -f <statefulset-file.yaml>
  ```

- **Delete a StatefulSet**
  ```bash
  kubectl delete statefulset <statefulset-name>
  ```

## General Commands
- **Get logs from a pod**
  ```bash
  kubectl logs <pod-name>
  ```

- **Get events in the current namespace**
  ```bash
  kubectl get events
  ```

- **Describe a resource (e.g., pod, deployment)**
  ```bash
  kubectl describe <resource-type> <resource-name>
  ```

- **Get API resources available in the cluster**
  ```bash
  kubectl api-resources
  ```

- **View the configuration of the current context**
  ```bash
  kubectl config view
  ```

- **Get the version of Kubernetes**
  ```bash
  kubectl version
  ```

---

This list covers many of the essential commands you'll use when working with Kubernetes. Feel free to modify or expand upon this list based on your specific needs!
``` 

Let me know if you need any additional information or modifications!
